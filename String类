package org.example;


import java.util.Calendar;
import java.util.Date;

public  class Test_String {

    int f(int x){
        if(x==1)
            return 1;
        return x+f(x-1);
    }
    public static void main(String[] args) {
        /*String a="abc";
        String b="abc";
        String c=new String("abc");
        System.out.println(a==b);
        System.out.println(a==c);
        System.out.println(a.equals(b));
        System.out.println(a.equals(c));*/

        /*int a=0,c=0;
        do{
            --c;
            a=a-1;
        }while(a>0);
        System.out.println(c);*/


        /*Test_String t=new Test_String();
        int result=t.f(5);
        System.out.println(result);*/


        /*Date d=new Date();
        Calendar calendar = Calendar.getInstance();
        //System.out.println(calendar.get(1));
        System.out.println(d);*/

        /*String[] a={"1","我的", "java" };
        for(String a1:a){
            a1="修改";
            System.out.println(a1);
        }
        System.out.println(a[1]);*/

        /*String c="123";
        String d="sjsa";
        String f=c+d;
        System.out.println(f);*/

        /*//将字符数组转为字符串
        char g[]={'h','2','3','4'};
        String g1=new String(g);
        System.out.println(g1);

        String s=new String(g,1,3);  //从下标1开始截取字符串
        System.out.println(s);*/

        //************************字符串的查找
        /*
        int a=s.indexOf("3");
        System.out.println(a);
        int b=s.lastIndexOf("4");
        System.out.println(b);

        //获取指定索引位置的字符
        char c=s.charAt(1);
        System.out.println(c);*/

        //判断某段文字是否在指定字符串出现一次
        /*String wenzi="今天";
        String zifu="今天的天气不错，适合春游，心情也很好";
        int temp1=-2,temp2=-2;
        temp1=zifu.indexOf("今天");
        temp2=zifu.lastIndexOf("今天");
        if(temp1!=temp2)     //temp1!=-1&&temp2!=-1&&
            System.out.println("“今天”出现不止一次");
        else if(temp1==-1&&temp2==-1)
            System.out.println("“今天”未出现");
        else
            System.out.println("“今天”只出现一次");
        System.out.println(temp1+"  "+temp2);*/

        //获取最中间的字符
        /*String str=new String("adurqw");
        char temp;
        if(str.length()%2==0)  //长度为偶数，取索引较小的
            temp=str.charAt((str.length()/2)-1);
        else
            temp=str.charAt(str.length()/2);
        System.out.println(temp);*/

        //************************字符串的操作
        //去除空格
        /*String str=new String("  dfddsdf  ");
        String str1=str.trim();
        System.out.println(str+"\n"+str1);

        //字符串的替换
        String str2=str.replace('d','z');
        System.out.println(str2);

        //判断字符串的开始与结尾
        boolean b=str.startsWith("  ");
        boolean b1=str.endsWith("fd");
        System.out.println(b+"\n"+b1);

        //判断字符串是否相等
        String a1=new String("abc");
        String a2=new String("ABC");
        boolean bo1=a1.equals(a2);
        boolean bo2=a1.equalsIgnoreCase(a2);
        System.out.println(bo1+"\n"+bo2);*/

        //按字典顺序比较两个字符串 比较基于字符串各字符的Unicode值
        /*String a3=new String("aec");
        String a4=new String("acd");
        String a5=new String("c");
        System.out.println(a3.compareTo(a4));   //2

        //字符串大小写转换
        String s1=new String("Adf");
        String s11=s1.toLowerCase();  //将字符串中所有大写字母改写为小写字母
        System.out.println(s11);  //adf
        String s12=s11.toUpperCase();
        System.out.println(s12);  //ADF*/

        //分割字符
        /*String s="192.168.0.254";
        String[] ss1=s.split("\\.",2);
        for(String a:ss1){
            System.out.println("["+a+"]");
        }
        //从QQ邮箱中截取QQ号
        String email="1912592745@qq.com";
        String[] qq=email.split("@");
        System.out.println("qq号是："+qq[0]);*/

        //格式化字符串 String类的静态format()方法
        String s1=String.format("%s","玩家1");
        String s2=String.format("%s","5");
        String s3=String.format("%s","已超神");
        System.out.println(s1+"连续完成"+s2+"次击杀后，获得了‘"+s3+"'的称号");
        String s4=String.format("%o",12);
        System.out.println(s4);

    }
}
